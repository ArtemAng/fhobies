[{"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\index.js":"1","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\App.js":"2","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\reportWebVitals.js":"3","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\Post.js":"4","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\NavigationPanel.js":"5","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\CommentsModal.js":"6","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\CommentSender.js":"7","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\Comment.js":"8","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\routes.js":"9","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\pages\\SignIn.js":"10","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\pages\\SignUp.js":"11","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\pages\\Posts.js":"12","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\message.hook.js":"13","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\http.hook.js":"14","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\auth.hook.js":"15","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\context\\AuthContext.js":"16","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\theme.js":"17","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\pages\\Profile.js":"18","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\AddPostForm.js":"19","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\context\\ItemContext.js":"20","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\item.hook.js":"21","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\collections.hook.js":"22","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\context\\CollectionContext.js":"23","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\AddCollectionForm.js":"24","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\FormControll.js":"25","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\posts.hook.js":"26","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\context\\CommentsContext.js":"27","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\comments.hook.js":"28","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\Dropzone.js":"29","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\ToolsMenu.js":"30","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\pages\\CollectionItems.js":"31","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\collectionItems\\CollectionItem.js":"32","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\AddItemModal.js":"33","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\context\\ItemsContext.js":"34","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\items.hook.js":"35","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\pages\\Admin.js":"36","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\admin\\DrawerTools.js":"37","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\context\\Categories.js":"38","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\catigories.hook.js":"39","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\admin\\CategoriesList.js":"40","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\admin\\CategoriesListItem.js":"41","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\admin\\AddCategoryForm.js":"42","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\admin\\ComboBox.js":"43","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\admin\\PropsList.js":"44"},{"size":509,"mtime":1611621097962,"results":"45","hashOfConfig":"46"},{"size":2718,"mtime":1611623052654,"results":"47","hashOfConfig":"46"},{"size":362,"mtime":499162500000,"results":"48","hashOfConfig":"46"},{"size":3663,"mtime":1611421695091,"results":"49","hashOfConfig":"46"},{"size":7687,"mtime":1611421843757,"results":"50","hashOfConfig":"46"},{"size":2072,"mtime":1611421735828,"results":"51","hashOfConfig":"46"},{"size":1577,"mtime":1611179272768,"results":"52","hashOfConfig":"46"},{"size":891,"mtime":1611421575450,"results":"53","hashOfConfig":"46"},{"size":2858,"mtime":1611420250585,"results":"54","hashOfConfig":"46"},{"size":5559,"mtime":1611420161485,"results":"55","hashOfConfig":"46"},{"size":4650,"mtime":1610736196007,"results":"56","hashOfConfig":"46"},{"size":2050,"mtime":1611661293567,"results":"57","hashOfConfig":"46"},{"size":148,"mtime":1610110222443,"results":"58","hashOfConfig":"46"},{"size":998,"mtime":1610110223968,"results":"59","hashOfConfig":"46"},{"size":892,"mtime":1611074254693,"results":"60","hashOfConfig":"46"},{"size":195,"mtime":1610134486490,"results":"61","hashOfConfig":"46"},{"size":1366,"mtime":1611263727996,"results":"62","hashOfConfig":"46"},{"size":2306,"mtime":1611422607376,"results":"63","hashOfConfig":"46"},{"size":2267,"mtime":1611421516808,"results":"64","hashOfConfig":"46"},{"size":129,"mtime":1610826895364,"results":"65","hashOfConfig":"46"},{"size":490,"mtime":1611421604756,"results":"66","hashOfConfig":"46"},{"size":360,"mtime":1610453449219,"results":"67","hashOfConfig":"46"},{"size":176,"mtime":1610452983703,"results":"68","hashOfConfig":"46"},{"size":1768,"mtime":1611420586887,"results":"69","hashOfConfig":"46"},{"size":2019,"mtime":1611421882099,"results":"70","hashOfConfig":"46"},{"size":319,"mtime":1610462632858,"results":"71","hashOfConfig":"46"},{"size":198,"mtime":1611177821352,"results":"72","hashOfConfig":"46"},{"size":658,"mtime":1611421595258,"results":"73","hashOfConfig":"46"},{"size":2263,"mtime":1611421162157,"results":"74","hashOfConfig":"46"},{"size":1957,"mtime":1611267014623,"results":"75","hashOfConfig":"46"},{"size":1374,"mtime":1611421631963,"results":"76","hashOfConfig":"46"},{"size":3561,"mtime":1611421805172,"results":"77","hashOfConfig":"46"},{"size":2536,"mtime":1611420643915,"results":"78","hashOfConfig":"46"},{"size":179,"mtime":1611174723113,"results":"79","hashOfConfig":"46"},{"size":437,"mtime":1611421614107,"results":"80","hashOfConfig":"46"},{"size":5026,"mtime":1611626680182,"results":"81","hashOfConfig":"46"},{"size":2104,"mtime":1611425884329,"results":"82","hashOfConfig":"46"},{"size":170,"mtime":1611419180978,"results":"83","hashOfConfig":"46"},{"size":699,"mtime":1611626247164,"results":"84","hashOfConfig":"46"},{"size":1238,"mtime":1611625043456,"results":"85","hashOfConfig":"46"},{"size":1197,"mtime":1611625555791,"results":"86","hashOfConfig":"46"},{"size":1853,"mtime":1611623440243,"results":"87","hashOfConfig":"46"},{"size":1436,"mtime":1611620226398,"results":"88","hashOfConfig":"46"},{"size":1622,"mtime":1611621439740,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hpxbys",{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"96"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"96"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"96"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"96"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\index.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\App.js",["190","191"],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\reportWebVitals.js",[],["192","193"],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\Post.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\NavigationPanel.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\CommentsModal.js",["194"],"import React, { useState, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { Divider, } from '@material-ui/core';\r\nimport CommentSender from './CommentSender';\r\nimport Comment from './Comment';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { CommentsContext } from '../context/CommentsContext';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        maxWidth: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(2, 4, 3),\r\n        alignItems: 'center'\r\n    },\r\n}));\r\n\r\nexport default function SimpleModal({ postId, open, handleClose }) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = useState(getModalStyle);\r\n    const { comments, commetsClickedItem } = useContext(CommentsContext);\r\n\r\n\r\n\r\n\r\n\r\n    const opened = open || false;\r\n    const body = (\r\n        <Fade in={opened}>\r\n            <div style={modalStyle} className={classes.paper}>\r\n                {/* kostiiiiiiliiiii */}\r\n                {comments.filter(i => i.itemId === commetsClickedItem).map((i, id) => <Comment key={id} text={i.text} />)}\r\n                <Divider />\r\n                <CommentSender />\r\n                <SimpleModal />\r\n            </div>\r\n        </Fade>\r\n    );\r\n\r\n    return (\r\n\r\n        <Modal\r\n            open={open || false}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500,\r\n            }}\r\n        >\r\n            {body}\r\n        </Modal>\r\n    );\r\n}","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\CommentSender.js",["195","196"],"import { Avatar, Button, Input } from '@material-ui/core';\r\nimport React, { useCallback, useState, useContext } from 'react';\r\nimport testImage from '../images/tlou2.jpg';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TextField } from '@material-ui/core';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { CommentsContext } from '../context/CommentsContext';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        margin: 10,\r\n        marginTop: 20\r\n    },\r\n    flexItem: {\r\n        marginRight: 20\r\n    },\r\n    textField: {\r\n        width: 300\r\n    }\r\n})\r\n\r\nconst CommentSender = () => {\r\n\r\n    const { request } = useHttp();\r\n    const [text, setText] = useState('');\r\n    const { commetsClickedItem } = useContext(CommentsContext);\r\n    const { token, userId } = JSON.parse(localStorage.getItem('userData'));\r\n    const sendComment = useCallback(async () => {\r\n        await request('/api/comments/addcomment', 'POST', { text, userId, itemId: commetsClickedItem }, { Authorization: `Bearer ${token}` });\r\n    })\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Avatar className={classes.flexItem} alt='user avatar' src={testImage} />\r\n            <TextField onChange={(e) => setText(e.target.value)} className={classes.textField} placeholder='Commentary...' />\r\n            <Button onClick={sendComment} >\r\n                <SendIcon />\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default CommentSender;","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\Comment.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\routes.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\pages\\SignIn.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\pages\\SignUp.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\pages\\Posts.js",["197","198","199","200","201","202","203"],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\message.hook.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\http.hook.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\auth.hook.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\context\\AuthContext.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\theme.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\pages\\Profile.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\AddPostForm.js",["204","205","206"],"import {\r\n    Paper,\r\n    Button,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useContext } from 'react';\r\nimport { ItemContext } from '../context/ItemContext';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { useMessage } from '../hooks/message.hook';\r\nimport { CollectionsContext } from '../context/CollectionContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        padding: theme.spacing(2),\r\n       \r\n    },\r\n    inputs: {\r\n        marginBottom: 20,\r\n    },\r\n    btn:{\r\n        width: 200,\r\n    }\r\n}));\r\n\r\nconst AddPostForm = ({image}) => {\r\n    const classes = useStyles();\r\n    const { item, editItem } = useContext(ItemContext);\r\n    const { request, error, clearError } = useHttp();\r\n    const message = useMessage();\r\n    const { collections } = useContext(CollectionsContext);\r\n    const {userId} = JSON.parse(localStorage.getItem('userData'));\r\n\r\n    const titleChangeHandler = (e) => editItem(e.target);\r\n    const descriptionChangeHandler = (e) => editItem(e.target);\r\n\r\n    const submitHandler = async () => {\r\n        try {\r\n            const data = await request('/api/posts/addPost', 'POST', { ...item, userId, image });\r\n            message(data.message)\r\n        } catch (e) { }\r\n    }\r\n    return (\r\n        <Paper className={classes.form}>\r\n            <TextField\r\n                label=\"Title\"\r\n                color='secondary'\r\n                variant='filled'\r\n                className={classes.inputs}\r\n                onChange={titleChangeHandler}\r\n                name='title'\r\n            />\r\n            <TextField\r\n                label=\"Description\"\r\n                fullWidth\r\n                multiline\r\n                rows={6}\r\n                color='secondary'\r\n                name='description'\r\n                className={classes.inputs}\r\n                variant='filled'\r\n                onChange={descriptionChangeHandler}\r\n            />\r\n            <Button\r\n                variant='contained'\r\n                color='secondary'\r\n                onClick={submitHandler}\r\n                className={classes.btn}\r\n            >\r\n                Add\r\n            </Button>\r\n        </Paper>\r\n    );\r\n}\r\nexport default AddPostForm;","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\context\\ItemContext.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\item.hook.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\collections.hook.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\context\\CollectionContext.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\AddCollectionForm.js",["207","208","209","210"],"import {\r\n    Button,\r\n    TextField\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useContext, useState } from 'react';\r\nimport { CollectionsContext } from '../context/CollectionContext';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { useMessage } from '../hooks/message.hook';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tf: {\r\n        marginTop: 10,\r\n        marginBottom: 10\r\n\r\n    },\r\n    btn: {\r\n        height: 55,\r\n        marginLeft: 5\r\n    }\r\n\r\n}));\r\n\r\nconst AddCollectionForm = () => {\r\n    const { addCollection } = useContext(CollectionsContext);\r\n    const classes = useStyles();\r\n    const [collectionName, setCollectionName] = useState('');\r\n    const { request, error, clearError } = useHttp();\r\n    const message = useMessage();\r\n\r\n    const collectionNameHandle = (e) => setCollectionName(e.target.value);\r\n\r\n    const addCollectionHandle = async () => {\r\n        try {\r\n            addCollection(collectionName);\r\n            const user = JSON.parse(localStorage.getItem('userData'));\r\n            const data = await request('/api/collections/addcollection', 'POST', { collectionName, userId: user.userId});\r\n            // message(data.message);\r\n        } catch (e) {}\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                variant='outlined'\r\n                label='Collection name'\r\n                name='collectionName'\r\n                color='secondary'\r\n                fullWidth\r\n                className={classes.tf}\r\n                onChange={collectionNameHandle}\r\n            />\r\n            <Button\r\n                variant='outlined'\r\n                fullWidth\r\n                color='secondary'\r\n                onClick={addCollectionHandle}\r\n            >\r\n                Add\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\nexport default AddCollectionForm;","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\FormControll.js",["211","212"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useItem } from '../hooks/item.hook';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        display: 'inline-block',\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nexport default function ControlledOpenSelect({ title, datas, onChanged=()=>{} }) {\r\n    const classes = useStyles();\r\n    const [collectionName, setCollectionName] = React.useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n    const {editItem} = useItem();\r\n\r\n    const handleChange = (event) => {\r\n        setCollectionName(event.target.value);\r\n        //onChanged(datas[event.target.value - 1].title);\r\n        onChanged(event.target);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <FormControl className={classes.formControl}>\r\n            <InputLabel id=\"demo-controlled-open-select-label\">{title}</InputLabel>\r\n            <Select\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                open={open}\r\n                name={'collectionName'}\r\n                onClose={handleClose}\r\n                onOpen={handleOpen}\r\n                value={collectionName}\r\n                onChange={handleChange}\r\n            >\r\n                {\r\n                    datas.map((item,id) => {\r\n                        return (\r\n                            <MenuItem key={id} value={item}>{item}</MenuItem>\r\n                        )\r\n                    })\r\n                }\r\n            </Select>\r\n        </FormControl>\r\n    );\r\n}","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\posts.hook.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\context\\CommentsContext.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\comments.hook.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\Dropzone.js",["213"],"import { Card, CardContent, CardMedia, Typography } from '@material-ui/core';\r\nimport { useCallback, useState, Fragment } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    preview: {\r\n        margin: 10\r\n    },\r\n    text: {\r\n        textAlign: 'center',\r\n        color: '#8d8d8d',\r\n    },\r\n    dropField: {\r\n        border: '1px dashed #8d8d8d ',\r\n        borderRadius: 5\r\n    },\r\n    place: {\r\n        height: 250,\r\n        alignItems: 'center',\r\n    }\r\n}));\r\n\r\nconst Dropzone = ({ setImage }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [previewSource, setPreviewSource] = useState(null);\r\n\r\n    const onDrop = useCallback(\r\n        (acceptedFile) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(acceptedFile[0]);\r\n            reader.onloadend = () => {\r\n                console.log(reader.result);\r\n                setPreviewSource(reader.result);\r\n                setImage(reader.result);\r\n            };\r\n        },\r\n        [setImage]);\r\n\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n        onDrop,\r\n        accept: \"image/*\",\r\n        multiple: false,\r\n    });\r\n    return (\r\n        <Card className={classes.place}>\r\n            <CardContent className={classes.dropField} {...getRootProps()}>\r\n                <input className={classes.input}  {...getInputProps()} />\r\n                <div >\r\n                    {isDragActive ? (\r\n                        <Typography variant='p' component='h4' className={classes.text}>\r\n                            Drop your image\r\n                        </Typography>\r\n                    ) : (\r\n                            <Typography  component='p' className={classes.text}>\r\n                                Drag or choose your image here\r\n                            </Typography>\r\n                        )}\r\n                </div>\r\n            </CardContent>\r\n            {previewSource && (\r\n                <CardMedia\r\n                    component='img'\r\n                    alt='collection item photo'\r\n                    src={previewSource}/>\r\n            )}\r\n        </Card>\r\n    );\r\n}\r\nexport default Dropzone;","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\ToolsMenu.js",["214"],"import React, { useCallback, useState } from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport AddItemModal from '../components/AddItemModal';\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n    btn:{\r\n        backgroundColor: theme.palette.primary.backgroundColor,\r\n        color: theme.palette.primary.contrastText,\r\n        '&:hover': {\r\n            color: theme.palette.primary.contrastText\r\n        }\r\n    }\r\n}));\r\n\r\nconst ToolsMenu = ({ isOpen, openTools, anchorEl, postIdx }) => {\r\n    const classes = useStyles();\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const { request } = useHttp();\r\n\r\n    const [openAddItem, setOpenAddItem] = useState(false);\r\n\r\n    const openAddItemHandle = ()=>{\r\n        setOpenAddItem(!openAddItem);\r\n    }\r\n    const deleteHandle = useCallback(async () => {\r\n        await request('/api/posts/deleteItem', 'POST', { postIdx })\r\n    });\r\n\r\n\r\n    return (\r\n        <Popover\r\n            id={menuId}\r\n            keepMounted\r\n            anchorEl={anchorEl}\r\n            open={isOpen}\r\n            onClose={openTools}\r\n            anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n            }}\r\n        >\r\n            <MenuItem className={classes.btn} variant='contained' color=\"secondary\" onClick={() => { openTools(); deleteHandle(); }}>Delete</MenuItem>\r\n            <MenuItem className={classes.btn} variant='contained' color=\"secondary\" onClick={() => { openTools(); }}>Edit</MenuItem>\r\n            <MenuItem className={classes.btn} variant='contained' color=\"secondary\" onClick={() => { openTools(); openAddItemHandle()}}>AddItem</MenuItem>\r\n            <AddItemModal id={postIdx} open={openAddItem} close={()=>{openAddItemHandle()}} />\r\n        </Popover >\r\n    );\r\n}\r\nexport default ToolsMenu;","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\pages\\CollectionItems.js",["215","216","217"],"import { useEffect, useState, useContext } from 'react';\r\nimport CollectionItem from '../components/collectionItems/CollectionItem';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { ItemsContext } from '../context/ItemsContext';\r\nimport { Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        minWidth: 300,\r\n        margin: 10\r\n    }\r\n}))\r\n\r\nconst CollectionItems = () => {\r\n    const { items, clickedItem } = useContext(ItemsContext);\r\n    const [comments, setComments] = useState([]);\r\n    const { request } = useHttp();\r\n    const classes = useStyles();\r\n\r\n    useEffect(async () => {\r\n        const data = await request('/api/comments', 'GET');\r\n        setComments(data.comments);\r\n        console.log(data.comments, comments);\r\n    }, [request]);\r\n\r\n    return (\r\n        <Grid container align=\"center\" maxWidth=\"md\" justify=\"center\" spacing={1}>\r\n            {items.filter((item, idx) => item.collectionId === clickedItem).map((i, idx) => (\r\n                <Grid className={classes.card} item xs={12} sm={6} md={2} spacing={1}>\r\n                    < CollectionItem key={idx} likes={i.likes.length} id={i._id} key={idx} title={i.name} tags={i.tags} />\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n}\r\nexport default CollectionItems;","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\collectionItems\\CollectionItem.js",["218"],"import { useState, useContext, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport img from '../../images/tlou2.jpg';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport CommentsModal from '../CommentsModal';\r\nimport { CommentsContext } from '../../context/CommentsContext';\r\nimport { useHttp } from '../../hooks/http.hook';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        maxWidth: 345,\r\n\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n        backgroundColor: red[500],\r\n    },\r\n}));\r\n\r\nconst CollectionItem = ({ title, tags, id, likes }) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const { request } = useHttp();\r\n    const { userId } = JSON.parse(localStorage.getItem('userData'));\r\n    const { setCurrentItemId } = useContext(CommentsContext);\r\n    const handleOpen = () => {\r\n        setOpen(!open);\r\n    };\r\n\r\n    const likeHandle = useCallback(async () => {\r\n        try {\r\n            await request('/api/collectionitems/like', 'POST', { userId, itemId: id })\r\n            \r\n        } catch (e) {}\r\n    }, [request])\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                        R\r\n                  </Avatar>\r\n                }\r\n                action={\r\n                    <IconButton aria-label=\"settings\">\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                }\r\n                title={title}\r\n                subheader=\"September 14, 2016\"\r\n            />\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={img}\r\n                title=\"Paella dish\"\r\n            />\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {tags}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n                <IconButton onClick={() => {console.log('like', id); likeHandle()}} aria-label=\"add to favorites\">\r\n                    <FavoriteIcon /> {likes}\r\n                </IconButton>\r\n                <IconButton onClick={() => { handleOpen(); setCurrentItemId(id) }} aria-label=\"share\">\r\n                    <ChatBubbleOutlineIcon />\r\n                </IconButton>\r\n            </CardActions>\r\n            <CommentsModal open={open} handleClose={() => handleOpen()} />\r\n\r\n        </Card>\r\n    );\r\n}\r\nexport default CollectionItem;","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\AddItemModal.js",["219"],"import React, { useState, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport { useHttp } from '../hooks/http.hook';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        maxWidth: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(2, 4, 3),\r\n        alignItems: 'center'\r\n    },\r\n}));\r\n\r\nexport default function SimpleModal({ id, postComments, postId, open, close, }) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = useState(getModalStyle);\r\n    const [formData, setFormData] = useState({});\r\n    const { request, message } = useHttp();\r\n    const {token, userId} = JSON.parse(localStorage.getItem('userData'));\r\n    const changeData = (e)=>setFormData({...formData, [e.target.name]: e.target.value});\r\n    const addItem = useCallback(async ()=>{\r\n        try {\r\n            const data = await request('/api/collectionitems/addItem', 'POST', {collectionId: id, ...formData, userId}, {Authorization: 'Bearer ' + token});\r\n            message(data.message);\r\n        } catch (e) {\r\n            \r\n        }\r\n    });\r\n\r\n    const opened = open || false;\r\n    const body = (\r\n        <Fade in={opened}>\r\n            <div style={modalStyle} className={classes.paper}>\r\n                {/* kostiiiiiiliiiii */}\r\n                <TextField onChange={changeData} name='name' placeholder='Name' variant='outlined'></TextField>\r\n                <TextField onChange={changeData} name='tags' multiline rows={3} placeholder='Tags' variant='outlined'></TextField>\r\n                <Button onClick={addItem} variant='outlined'>Add</Button>\r\n\r\n            </div>\r\n        </Fade>\r\n    );\r\n\r\n    return (\r\n\r\n        <Modal\r\n            open={open || false}\r\n            onClose={close}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n                timeout: 500,\r\n            }}\r\n        >\r\n            {body}\r\n        </Modal>\r\n    );\r\n}","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\context\\ItemsContext.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\items.hook.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\pages\\Admin.js",["220","221","222","223","224"],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\admin\\DrawerTools.js",["225"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { ListItemText, List, MenuItem } from '@material-ui/core';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport CategoryIcon from '@material-ui/icons/Category';\r\n\r\nconst drawerWidth = 350;\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(0),\r\n\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    title: {\r\n        margin: 5,\r\n    }\r\n\r\n}));\r\n\r\nconst DrawerTools = ({ open, openDrawerHandle }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            classes={{\r\n                paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n            }}\r\n            open={open}\r\n        >\r\n            <List>\r\n                <MenuItem align=\"center\">\r\n                    <AccountCircle />\r\n                    <p className={classes.title}>Users</p>\r\n                </MenuItem>\r\n\r\n                <MenuItem alignItems=\"center\">\r\n                    <CategoryIcon />\r\n                    <p className={classes.title}>Categories</p>\r\n                </MenuItem>\r\n            </List>\r\n            <Divider />\r\n            {/* <List>{secondaryListItems}</List> */}\r\n        </Drawer>\r\n    );\r\n}\r\nexport default DrawerTools;","C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\context\\Categories.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\hooks\\catigories.hook.js",["226"],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\admin\\CategoriesList.js",["227"],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\admin\\CategoriesListItem.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\admin\\AddCategoryForm.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\admin\\ComboBox.js",[],"C:\\Users\\Mi\\Desktop\\prog\\itransition\\kursach\\kursch-client\\src\\components\\admin\\PropsList.js",[],{"ruleId":"228","severity":1,"message":"229","line":40,"column":13,"nodeType":"230","endLine":47,"endColumn":4},{"ruleId":"228","severity":1,"message":"231","line":47,"column":6,"nodeType":"232","endLine":47,"endColumn":15,"suggestions":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":9,"column":10,"nodeType":"240","messageId":"241","endLine":9,"endColumn":17},{"ruleId":"238","severity":1,"message":"242","line":1,"column":26,"nodeType":"240","messageId":"241","endLine":1,"endColumn":31},{"ruleId":"228","severity":1,"message":"243","line":30,"column":25,"nodeType":"240","endLine":30,"endColumn":36},{"ruleId":"228","severity":1,"message":"244","line":22,"column":8,"nodeType":"232","endLine":22,"endColumn":17,"suggestions":"245"},{"ruleId":"238","severity":1,"message":"246","line":24,"column":11,"nodeType":"240","messageId":"241","endLine":24,"endColumn":22},{"ruleId":"228","severity":1,"message":"244","line":31,"column":8,"nodeType":"232","endLine":31,"endColumn":17,"suggestions":"247"},{"ruleId":"228","severity":1,"message":"229","line":36,"column":15,"nodeType":"230","endLine":41,"endColumn":6},{"ruleId":"228","severity":1,"message":"248","line":41,"column":8,"nodeType":"232","endLine":41,"endColumn":17,"suggestions":"249"},{"ruleId":"228","severity":1,"message":"243","line":43,"column":18,"nodeType":"240","endLine":43,"endColumn":29},{"ruleId":"238","severity":1,"message":"250","line":45,"column":19,"nodeType":"240","messageId":"241","endLine":45,"endColumn":23},{"ruleId":"238","severity":1,"message":"251","line":29,"column":22,"nodeType":"240","messageId":"241","endLine":29,"endColumn":27},{"ruleId":"238","severity":1,"message":"252","line":29,"column":29,"nodeType":"240","messageId":"241","endLine":29,"endColumn":39},{"ruleId":"238","severity":1,"message":"253","line":31,"column":13,"nodeType":"240","messageId":"241","endLine":31,"endColumn":24},{"ruleId":"238","severity":1,"message":"251","line":28,"column":22,"nodeType":"240","messageId":"241","endLine":28,"endColumn":27},{"ruleId":"238","severity":1,"message":"252","line":28,"column":29,"nodeType":"240","messageId":"241","endLine":28,"endColumn":39},{"ruleId":"238","severity":1,"message":"254","line":29,"column":11,"nodeType":"240","messageId":"241","endLine":29,"endColumn":18},{"ruleId":"238","severity":1,"message":"250","line":37,"column":19,"nodeType":"240","messageId":"241","endLine":37,"endColumn":23},{"ruleId":"238","severity":1,"message":"255","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":14},{"ruleId":"238","severity":1,"message":"256","line":25,"column":12,"nodeType":"240","messageId":"241","endLine":25,"endColumn":20},{"ruleId":"238","severity":1,"message":"257","line":2,"column":33,"nodeType":"240","messageId":"241","endLine":2,"endColumn":41},{"ruleId":"228","severity":1,"message":"243","line":29,"column":26,"nodeType":"240","endLine":29,"endColumn":37},{"ruleId":"228","severity":1,"message":"229","line":21,"column":15,"nodeType":"230","endLine":25,"endColumn":6},{"ruleId":"228","severity":1,"message":"258","line":25,"column":8,"nodeType":"232","endLine":25,"endColumn":17,"suggestions":"259"},{"ruleId":"260","severity":1,"message":"261","line":31,"column":82,"nodeType":"262","endLine":31,"endColumn":91},{"ruleId":"228","severity":1,"message":"263","line":59,"column":8,"nodeType":"232","endLine":59,"endColumn":17,"suggestions":"264"},{"ruleId":"228","severity":1,"message":"243","line":37,"column":21,"nodeType":"240","endLine":37,"endColumn":32},{"ruleId":"265","severity":1,"message":"266","line":100,"column":65,"nodeType":"267","messageId":"268","endLine":100,"endColumn":67},{"ruleId":"265","severity":1,"message":"266","line":100,"column":80,"nodeType":"267","messageId":"268","endLine":100,"endColumn":82},{"ruleId":"238","severity":1,"message":"269","line":111,"column":9,"nodeType":"240","messageId":"241","endLine":111,"endColumn":16},{"ruleId":"228","severity":1,"message":"229","line":116,"column":13,"nodeType":"230","endLine":119,"endColumn":4},{"ruleId":"228","severity":1,"message":"270","line":119,"column":6,"nodeType":"232","endLine":119,"endColumn":15,"suggestions":"271"},{"ruleId":"238","severity":1,"message":"272","line":6,"column":10,"nodeType":"240","messageId":"241","endLine":6,"endColumn":22},{"ruleId":"238","severity":1,"message":"273","line":7,"column":11,"nodeType":"240","messageId":"241","endLine":7,"endColumn":22},{"ruleId":"238","severity":1,"message":"274","line":8,"column":5,"nodeType":"240","messageId":"241","endLine":8,"endColumn":9},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'setComments' and 'setItems'. Either include them or remove the dependency array.","ArrayExpression",["275"],"no-native-reassign",["276"],"no-negated-in-lhs",["277"],"no-unused-vars","'useHttp' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useCallback has a missing dependency: 'token'. Either include it or remove the dependency array.",["278"],"'getComments' is assigned a value but never used.",["279"],"React Hook useEffect has a missing dependency: 'setComments'. Either include it or remove the dependency array.",["280"],"'data' is assigned a value but never used.","'error' is assigned a value but never used.","'clearError' is assigned a value but never used.","'collections' is assigned a value but never used.","'message' is assigned a value but never used.","'Button' is defined but never used.","'editItem' is assigned a value but never used.","'Fragment' is defined but never used.","React Hook useEffect has a missing dependency: 'comments'. Either include it or remove the dependency array.",["281"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useCallback has missing dependencies: 'id' and 'userId'. Either include them or remove the dependency array.",["282"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setCategories'. Either include it or remove the dependency array.",["283"],"'ListItemText' is defined but never used.","'addCategory' is assigned a value but never used.","'List' is defined but never used.",{"desc":"284","fix":"285"},"no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},{"desc":"286","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},"Update the dependencies array to be: [request, setComments, setItems]",{"range":"297","text":"298"},"Update the dependencies array to be: [request, token]",{"range":"299","text":"300"},{"range":"301","text":"300"},"Update the dependencies array to be: [request, setComments]",{"range":"302","text":"303"},"Update the dependencies array to be: [comments, request]",{"range":"304","text":"305"},"Update the dependencies array to be: [id, request, userId]",{"range":"306","text":"307"},"Update the dependencies array to be: [request, setCategories]",{"range":"308","text":"309"},[1807,1816],"[request, setComments, setItems]",[841,850],"[request, token]",[1183,1192],[1432,1441],"[request, setComments]",[853,862],"[comments, request]",[2090,2099],"[id, request, userId]",[3499,3508],"[request, setCategories]"]